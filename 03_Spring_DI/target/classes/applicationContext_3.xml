<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- bean 태그 속성
	- id 속성 : 요청(호출)시 사용할 명칭(유일한 명칭)
	- class 속성 : 필수 속성, 대상 클래스 지정(패키지.클래스명)
	- lazy-init : 생성 시기 설정(기본은 컨테이너 구동시 객체 생성, lazy-init="true"는 설정시 요청할 때 생성)
	- scope : 객체 생성 형태 정의 (default는 싱글톤 : 하나의 객체 생성 사용)
			  prototype - 요청할 때 마다 새로운 객체 생성
			    단, prototype scope인 경우 destroy-method 적용 안됨
	(servlet init과 destroy와 유사)
	- init-method : 맨 처음 실행되는 것. 객체 생성 후 초기화 작업 필요시 사용
	- destroy-method : 소멸되기 직전 소멸되는 것. 객체 소멸시 처리할 작업 설정 사용
	 =================================================== -->
	 
	 <bean id="tv1" class="polymorphism1.LgTV"/>				<!-- Bean태그 설정 -->
	 <bean id="tv1Samsung" class="polymorphism1.SamsungTV"/>
	 
	 <!-- 생성자를 이용한 의존성 주입(DI) -->
	 <bean id="tv2Samsung" class="polymorphism2.SamsungTV">
	 	<constructor-arg ref="sony"> </constructor-arg> 		<!-- 참조형 데이터 타입을 사용할 때에는 ref -->
	 	<constructor-arg value="1000000"></constructor-arg> 	<!-- 기본 데이터 타입을 사용할 때에는 value -->
	 </bean>
	 
	 <bean id="sony" class="polymorphism2.SonySpeacker" />
	
	 <!-- 생성자에 전달되는 값 순서 sony, 200, 100 -->
	 <bean id="tv2Samsung2" class="polymorphism2.SamsungTV">
	 	<constructor-arg ref="sony" />							<!-- ref : sony Speacker Type -->
	 	<constructor-arg value="200" />							<!-- value : sony Speacker Type에 대한 값 설정 -->
	 	<constructor-arg value="100" />
	 </bean>	 	 	
	 
	 <!-- 인덱스 속성으로 작성순서와 관계없이 순서 지정 가능  -->
	 <bean id="tv2Samsung3" class="polymorphism2.SamsungTV">
	 	<constructor-arg index="0" ref="sony" />				
	 	<constructor-arg index="2" value="200" />				
	 	<constructor-arg index="1" value="100" />
	 </bean>
	 
	 <!--  ============ set 메소드(setter)를 이용한 의존주입(DI) ============ -->
	 <bean id="tv3Samsung" class="polymorphism3.SamsungTV">
	 	<property name="speacker" ref="sony3"></property> <!-- name : setter하고 매칭되는 필드명 넣어줌. set speacker를 사용한다는 의미 -->
		<property name="price" value="1000000"></property>
	 	<property name="width" value="220"></property>
	 	<property name="height" value="110"></property>
	 </bean>
	 <bean id="sony3" class="polymorphism3.SonySpeacker" />
	 
	 <bean id="tv3Samsung2" class="polymorphism3.SamsungTV"
	 	p:speacker-ref="sony3" p:price="4560000"
	 	p:width="300" p:height="222"/> <!-- p를 사용해서 속성값을 사용할 수 있다. -->
	 	
</beans>
